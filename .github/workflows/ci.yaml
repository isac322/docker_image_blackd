name: ci

on:
  pull_request:
  workflow_dispatch:

jobs:
  build_image:
    runs-on: ubuntu-latest
    env:
      PLATFORMS: linux/amd64,linux/arm64/v8,linux/arm/v7,linux/ppc64le,linux/s390x
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40
        with:
          files: |
            Dockerfile
            requirements.txt

      - name: Get black version
        id: black_version
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          VERSION=$(python -c "from pkg_resources import parse_requirements; print(next(filter(lambda r: r.name == 'black', parse_requirements(open('requirements.txt').read()))).specs[0][1])")
          echo $VERSION
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Set up Docker Buildx
        id: buildx
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Load buildkit state
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: isac322/buildkit-state@v2
        with:
          buildx-name: ${{ steps.buildx.outputs.name }}

      - name: Build
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/build-push-action@v4
        with:
          push: false
          build-args: |
            VERSION=${{ steps.black_version.outputs.version }}
          platforms: ${{ env.PLATFORMS }}
          cache-from: type=gha
          cache-to: type=gha,mode=min
