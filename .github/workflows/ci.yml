name: ci

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  black_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.black_version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - name: Get black version
        id: black_version
        run: |
          VERSION=$(python -c "from pkg_resources import parse_requirements; print(next(filter(lambda r: r.name == 'black', parse_requirements(open('requirements.txt').read()))).specs[0][1])")
          echo $VERSION
          echo "::set-output name=version::${VERSION}"
  docker:
    runs-on: ubuntu-latest
    needs: black_version
    env:
      PLATFORMS: linux/amd64,linux/arm64/v8,linux/386,linux/arm/v7
    steps:
      - uses: actions/checkout@v2
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v2.2.1
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/blackd
          flavor: |
            latest=false
          tags: |
            ${{ needs.black_version.outputs.version }}
            latest
          labels: |
            org.opencontainers.image.title=blackd
            org.opencontainers.image.version=${{ needs.black_version.outputs.version }}
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          platforms: ${{ env.PLATFORMS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/blackd:latest
          cache-to: type=inline
      - name: Update repo description
        if: github.event_name != 'pull_request'
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ secrets.DOCKERHUB_USERNAME }}/blackd
